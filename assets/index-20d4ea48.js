import{T as m,b as u,a as g}from"./index-1767a6e6.js";import{l as v}from"./logo-637148f3.js";import{a as f,k as y,q as w,x as n,n as p,d as b,t as c,e as $}from"./vendor-dd3f77fa.js";const S={readText:()=>Promise.reject(),writeText:(t="")=>new Promise((i,o)=>{try{const s=document,e=s.createElement("textarea");e.value=t,s.body.appendChild(e),e.value=t,s.body.appendChild(e),e.select();const l=s.execCommand("copy");s.body.removeChild(e),l?i(!0):o(!1)}catch{o(!1)}})};let{clipboard:h=void 0}=navigator;h||(h=S);const x=h;var C=Object.defineProperty,T=Object.getOwnPropertyDescriptor,r=(t,i,o,s)=>{for(var e=s>1?void 0:s?T(i,o):i,l=t.length-1,d;l>=0;l--)(d=t[l])&&(e=(s?d(i,o,e):d(e))||e);return s&&e&&C(i,o,e),e};let a=class extends m({}){constructor(){super(...arguments),this.bindBridge=new f(this,u),this.tgUser="",this.verifying=!1,this.signature="",this.interval=2.5,this.copied=!1,this.copiedShow=!1,this.timer=null}get account(){return u.account}async copy(t){t.preventDefault(),t.stopImmediatePropagation(),clearTimeout(this.timer);const i=this.signature;if(i){this.copied=!1;try{let o=this;await x.writeText(i),this.copied=!0,this.copiedShow=!0,this.timer=setTimeout(()=>{o.copiedShow=!1},this.interval*1e3)}catch{this.copied=!1}}}async verify(){this.verifying=!0;try{const t=await g(this.account),i=new Date().toISOString();this.signature=y(w(i))+"|"+y(await t.signMessage(`Sign this message to allow telegram user

${this.tgUser}

to join groups that you own a share.

Available for 30 minutes.
Time now: ${i}`))}catch(t){this.err=t}this.verifying=!1}render(){return n`<div class="home"><div class="ui-container my-4"><img class="w-24 object-contain select-none pointer-events-none" src="${v}"></div><div class="ui-container">${p(this.err,()=>n`<span class="text-red-500">${this.err}</span>`)}<div class="my-4"><p class="my-4">You are going to verify <span class="font-bold">${this.tgUser}</span> with your wallet address <span class="font-bold">${this.account}</span>.</p><p class="my-4">After verification, ${this.tgUser} can join any group that you own a share.</p></div><div class="my-4">Wallet Address:<connect-wallet-btn></connect-wallet-btn></div>${p(this.account&&!this.signature,()=>n`<div><p class="my-4">By clicking Verify, your wallet will open and you are asked to sign a message.</p><ui-button sm @click="${this.verify}" ?disabled="${this.verifying}">${p(this.verifying,()=>n`<i class="ml-2 text-sm mdi mdi-loading"></i>`,()=>"Verify")}</ui-button><p class="my-4">Please note, no transaction or gas fee is required.</p></div>`)} ${p(this.signature,()=>n`<div class="mt-6"><p class="my-4">Copy the following line and paste back to your telegram conversion</p><p class="my-4">${this.signature}</p><ui-button @click="${this.copy}" class="${b({copied:this.copiedShow})}">${this.copied&&this.copiedShow?n`<slot name="copied">Copied</slot>`:n`<slot name="copy">Copy</slot>`}</ui-button></div>`)}</div></div>`}};r([c()],a.prototype,"tgUser",2);r([c()],a.prototype,"err",2);r([c()],a.prototype,"verifying",2);r([c()],a.prototype,"signature",2);r([c()],a.prototype,"interval",2);r([c()],a.prototype,"copied",2);r([c()],a.prototype,"copiedShow",2);a=r([$("tg-verify")],a);export{a as TGVerify};
